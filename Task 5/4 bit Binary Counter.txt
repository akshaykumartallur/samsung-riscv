//4 bit Binary Counter

#include<stdio.h>
#include<debug.h>
#include<ch32v00x.h>

void GPIO_Config(void)
{
    GPIO_InitTypeDef GPIO_InitStructure = {0}; // structure variable used for GPIO configuration
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE); // to enable the clock for port D
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE); // to enable the clock for port C
    
    // Input Pins Configuration
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; // Defined as Input Type
    GPIO_Init(GPIOD, &GPIO_InitStructure);

    //Output Pins Configuration
    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2| GPIO_Pin_3 | GPIO_Pin_4 | GPIO_Pin_5;
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP; 
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
    GPIO_Init(GPIOC, &GPIO_InitStructure);
}

// The MAIN function responsible for the execution of program
int main()
{
    uint8_c counter=0;
    uint8_c rst;
    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
    SystemCoreClockUpdate();
    Delay_Init();
    GPIO_Config();

    while(1)
    {
       rst = GPIO_ReadInputDataBit(GPIOD, GPIO_Pin_1);
      if(rst==RESET){
        counter=0;
      }
      GPIO_WriteBit(GPIOC, GPIO_Pin_2, (counter & 0x01)? SET : RESET);//LSB
      GPIO_WriteBit(GPIOC, GPIO_Pin_3, (counter & 0x02)? SET : RESET);
      GPIO_WriteBit(GPIOC, GPIO_Pin_4, (counter & 0x04)? SET : RESET);
      GPIO_WriteBit(GPIOC, GPIO_Pin_5, (counter & 0x08)? SET : RESET);//MSB
      counter++;
    }
}